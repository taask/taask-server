syntax = "proto3";

import "model/proto/task.proto";
import "github.com/cohix/simplcrypto/proto/message.proto";
import "github.com/cohix/simplcrypto/proto/keypair.proto";

package taask.server.service;
option go_package = "github.com/taask/taask-server/service";

service TaskService {
	rpc AuthClient(AuthClientRequest) returns (AuthClientResponse);
	rpc Queue (taask.server.model.Task) returns (QueueTaskResponse);
	rpc CheckTask(CheckTaskRequest) returns (stream CheckTaskResponse);
}

message AuthClientRequest {
	simpl.crypto.Signature JoinCodeSignature = 1;
	simpl.crypto.SerializablePubKey PubKey = 2;
}

message AuthClientResponse {
	simpl.crypto.SerializablePubKey MasterRunnerPubKey = 1;
}

message QueueTaskResponse {
	string UUID = 1;
}

message CheckTaskRequest {
	string UUID = 1;
}

message CheckTaskResponse {
	string status = 1;
	int32 progress = 2;
	simpl.crypto.Message EncTaskKey = 3;
	taask.server.model.TaskUpdate result = 4;
}