syntax = "proto3";

import "model/proto/task.proto";
import "github.com/cohix/simplcrypto/proto/keypair.proto";
import "github.com/cohix/simplcrypto/proto/message.proto";

package taask.server.service;
option go_package = "github.com/taask/taask-server/service";

message Empty {}

service RunnerService {
	rpc AuthRunner(AuthRunnerRequest) returns (AuthRunnerResponse);
	rpc RegisterRunner(RegisterRunnerRequest) returns (stream taask.server.model.Task);
	rpc UpdateTask(taask.server.model.TaskUpdate) returns (Empty);
}

message AuthRunnerRequest {
	string UUID = 1;
	simpl.crypto.SerializablePubKey PubKey = 2;
	simpl.crypto.Signature AuthHashSignature = 3;
}

message AuthRunnerResponse {
	simpl.crypto.Message EncChallenge = 1;
}

message RegisterRunnerRequest {
	string UUID = 1;
	string Kind = 2;
	repeated string Tags = 3;
	simpl.crypto.Signature ChallengeSignature = 4;
}